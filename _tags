# OASIS_START
# DO NOT EDIT (digest: 4c2628e9752bcd1b0047050ef1f58269)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenstore_core
"core/xenstore_core.cmxs": use_xenstore_core
<core/*.ml{,i}>: pkg_cstruct
<core/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_client
"client/xenstore_client.cmxs": use_xenstore_client
<client/*.ml{,i}>: use_xenstore_core
<client/*.ml{,i}>: pkg_lwt
<client/*.ml{,i}>: pkg_cstruct
<client/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_server
"server/xenstore_server.cmxs": use_xenstore_server
"server/logging.cmx": for-pack(Xenstore_server)
"server/logging_interface.cmx": for-pack(Xenstore_server)
"server/connection.cmx": for-pack(Xenstore_server)
"server/call.cmx": for-pack(Xenstore_server)
"server/trie.cmx": for-pack(Xenstore_server)
"server/symbol.cmx": for-pack(Xenstore_server)
"server/namespace.cmx": for-pack(Xenstore_server)
"server/quota.cmx": for-pack(Xenstore_server)
"server/quota_interface.cmx": for-pack(Xenstore_server)
"server/perms.cmx": for-pack(Xenstore_server)
"server/store.cmx": for-pack(Xenstore_server)
"server/transaction.cmx": for-pack(Xenstore_server)
"server/xs_server.cmx": for-pack(Xenstore_server)
"server/junk.cmx": for-pack(Xenstore_server)
"server/introduce.cmx": for-pack(Xenstore_server)
"server/heap_debug_interface.cmx": for-pack(Xenstore_server)
<server/*.ml{,i}>: use_xenstore_core
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_cstruct
<server/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_unix
"unix/xenstore_unix.cmxs": use_xenstore_unix
<unix/*.ml{,i}>: use_xenstore_core
<unix/*.ml{,i}>: pkg_lwt
<unix/*.ml{,i}>: pkg_lwt.unix
<unix/*.ml{,i}>: pkg_cstruct
<unix/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore
"std/xenstore.cmxs": use_xenstore
"std/std.cmx": for-pack(Xenstore)
<std/*.ml{,i}>: use_xenstore_server
<std/*.ml{,i}>: use_xenstore_client
<std/*.ml{,i}>: use_xenstore_core
<std/*.ml{,i}>: pkg_lwt
<std/*.ml{,i}>: pkg_cstruct
<std/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_legacy_unix
"legacy_unix/xenstore_legacy_unix.cmxs": use_xenstore_legacy_unix
<legacy_unix/*.ml{,i}>: use_xenstore_core
<legacy_unix/*.ml{,i}>: pkg_unix
<legacy_unix/*.ml{,i}>: pkg_threads
<legacy_unix/*.ml{,i}>: pkg_cstruct
<legacy_unix/*.ml{,i}>: pkg_cstruct.syntax
# Executable xs_test
<core_test/xs_test.{native,byte}>: use_xenstore_core
<core_test/xs_test.{native,byte}>: pkg_lwt
<core_test/xs_test.{native,byte}>: pkg_lwt.unix
<core_test/xs_test.{native,byte}>: pkg_oUnit
<core_test/xs_test.{native,byte}>: pkg_cstruct
<core_test/xs_test.{native,byte}>: pkg_cstruct.syntax
<core_test/*.ml{,i}>: use_xenstore_core
<core_test/*.ml{,i}>: pkg_lwt
<core_test/*.ml{,i}>: pkg_lwt.unix
<core_test/*.ml{,i}>: pkg_oUnit
<core_test/*.ml{,i}>: pkg_cstruct
<core_test/*.ml{,i}>: pkg_cstruct.syntax
<core_test/xs_test.{native,byte}>: custom
# Executable server_test
<server_test/server_test.{native,byte}>: use_xenstore_server
<server_test/server_test.{native,byte}>: use_xenstore_core
<server_test/server_test.{native,byte}>: pkg_lwt
<server_test/server_test.{native,byte}>: pkg_oUnit
<server_test/server_test.{native,byte}>: pkg_cstruct
<server_test/server_test.{native,byte}>: pkg_cstruct.syntax
<server_test/server_test.{native,byte}>: custom
# Executable server_binary_test
<server_test/binary.{native,byte}>: use_xenstore_unix
<server_test/binary.{native,byte}>: use_xenstore_server
<server_test/binary.{native,byte}>: use_xenstore_core
<server_test/binary.{native,byte}>: pkg_lwt
<server_test/binary.{native,byte}>: pkg_lwt.unix
<server_test/binary.{native,byte}>: pkg_oUnit
<server_test/binary.{native,byte}>: pkg_cstruct
<server_test/binary.{native,byte}>: pkg_cstruct.syntax
<server_test/*.ml{,i}>: use_xenstore_unix
<server_test/*.ml{,i}>: use_xenstore_server
<server_test/*.ml{,i}>: use_xenstore_core
<server_test/*.ml{,i}>: pkg_lwt
<server_test/*.ml{,i}>: pkg_lwt.unix
<server_test/*.ml{,i}>: pkg_oUnit
<server_test/*.ml{,i}>: pkg_cstruct
<server_test/*.ml{,i}>: pkg_cstruct.syntax
<server_test/binary.{native,byte}>: custom
# Executable oxenstored
<userspace/server_unix.{native,byte}>: oasis_executable_oxenstored_cclib
"userspace/liboxenstored_stubs.lib": oasis_executable_oxenstored_cclib
"userspace/dlloxenstored_stubs.dll": oasis_executable_oxenstored_cclib
"userspace/liboxenstored_stubs.a": oasis_executable_oxenstored_cclib
"userspace/dlloxenstored_stubs.so": oasis_executable_oxenstored_cclib
<userspace/server_unix.{native,byte}>: use_liboxenstored_stubs
<userspace/server_unix.{native,byte}>: use_xenstore
<userspace/server_unix.{native,byte}>: use_xenstore_unix
<userspace/server_unix.{native,byte}>: use_xenstore_server
<userspace/server_unix.{native,byte}>: use_xenstore_client
<userspace/server_unix.{native,byte}>: use_xenstore_core
<userspace/server_unix.{native,byte}>: pkg_lwt
<userspace/server_unix.{native,byte}>: pkg_lwt.unix
<userspace/server_unix.{native,byte}>: pkg_cmdliner
<userspace/server_unix.{native,byte}>: pkg_shared-memory-ring
<userspace/server_unix.{native,byte}>: pkg_shared-memory-ring.xenstore
<userspace/server_unix.{native,byte}>: pkg_xen-evtchn
<userspace/server_unix.{native,byte}>: pkg_xen-evtchn.unix
<userspace/server_unix.{native,byte}>: pkg_xen-evtchn.unix.activations
<userspace/server_unix.{native,byte}>: pkg_io-page
<userspace/server_unix.{native,byte}>: pkg_io-page.unix
<userspace/server_unix.{native,byte}>: pkg_cstruct
<userspace/server_unix.{native,byte}>: pkg_cstruct.syntax
<userspace/*.ml{,i}>: use_xenstore
<userspace/*.ml{,i}>: use_xenstore_unix
<userspace/*.ml{,i}>: use_xenstore_server
<userspace/*.ml{,i}>: use_xenstore_client
<userspace/*.ml{,i}>: use_xenstore_core
<userspace/*.ml{,i}>: pkg_lwt
<userspace/*.ml{,i}>: pkg_lwt.unix
<userspace/*.ml{,i}>: pkg_cmdliner
<userspace/*.ml{,i}>: pkg_shared-memory-ring
<userspace/*.ml{,i}>: pkg_shared-memory-ring.xenstore
<userspace/*.ml{,i}>: pkg_xen-evtchn
<userspace/*.ml{,i}>: pkg_xen-evtchn.unix
<userspace/*.ml{,i}>: pkg_xen-evtchn.unix.activations
<userspace/*.ml{,i}>: pkg_io-page
<userspace/*.ml{,i}>: pkg_io-page.unix
<userspace/*.ml{,i}>: pkg_cstruct
<userspace/*.ml{,i}>: pkg_cstruct.syntax
"userspace/xenstore_stubs.c": use_xenstore
"userspace/xenstore_stubs.c": use_xenstore_unix
"userspace/xenstore_stubs.c": use_xenstore_server
"userspace/xenstore_stubs.c": use_xenstore_client
"userspace/xenstore_stubs.c": use_xenstore_core
"userspace/xenstore_stubs.c": pkg_lwt
"userspace/xenstore_stubs.c": pkg_lwt.unix
"userspace/xenstore_stubs.c": pkg_cmdliner
"userspace/xenstore_stubs.c": pkg_shared-memory-ring
"userspace/xenstore_stubs.c": pkg_shared-memory-ring.xenstore
"userspace/xenstore_stubs.c": pkg_xen-evtchn
"userspace/xenstore_stubs.c": pkg_xen-evtchn.unix
"userspace/xenstore_stubs.c": pkg_xen-evtchn.unix.activations
"userspace/xenstore_stubs.c": pkg_io-page
"userspace/xenstore_stubs.c": pkg_io-page.unix
"userspace/xenstore_stubs.c": pkg_cstruct
"userspace/xenstore_stubs.c": pkg_cstruct.syntax
<userspace/server_unix.{native,byte}>: custom
# OASIS_STOP
true: annot
<*/*.ml>: syntax_camlp4o
<unix/*.ml>: pkg_lwt.syntax
<client/*.ml>: pkg_lwt.syntax
<server/*.ml>: pkg_lwt.syntax
<server_test/binary.ml>: pkg_lwt.syntax
<userspace/*.ml>: pkg_lwt.syntax
<core>: include
<client_lwt>: include
<client_unix>: include
<server>: include
