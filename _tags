# OASIS_START
# DO NOT EDIT (digest: bf26aae4f14c540572bf1f9720498c3c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenstore
"core/xenstore.cmxs": use_xenstore
<core/*.ml{,i}>: pkg_cstruct
<core/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_lwt_unix
"lwt_unix/xenstore_lwt_unix.cmxs": use_xenstore_lwt_unix
<lwt_unix/*.ml{,i}>: use_xenstore
<lwt_unix/*.ml{,i}>: pkg_lwt
<lwt_unix/*.ml{,i}>: pkg_lwt.unix
<lwt_unix/*.ml{,i}>: pkg_cstruct
<lwt_unix/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_client_unix
"client_unix/xenstore_client_unix.cmxs": use_xenstore_client_unix
<client_unix/*.ml{,i}>: use_xenstore
<client_unix/*.ml{,i}>: pkg_threads
<client_unix/*.ml{,i}>: pkg_unix
<client_unix/*.ml{,i}>: pkg_cstruct
<client_unix/*.ml{,i}>: pkg_cstruct.syntax
# Library xenstore_server
"server/xenstore_server.cmxs": use_xenstore_server
"server/logging.cmx": for-pack(Xenstore_server)
"server/logging_interface.cmx": for-pack(Xenstore_server)
"server/connection.cmx": for-pack(Xenstore_server)
"server/call.cmx": for-pack(Xenstore_server)
"server/trie.cmx": for-pack(Xenstore_server)
"server/symbol.cmx": for-pack(Xenstore_server)
"server/namespace.cmx": for-pack(Xenstore_server)
"server/quota.cmx": for-pack(Xenstore_server)
"server/quota_interface.cmx": for-pack(Xenstore_server)
"server/perms.cmx": for-pack(Xenstore_server)
"server/store.cmx": for-pack(Xenstore_server)
"server/transaction.cmx": for-pack(Xenstore_server)
"server/xs_server.cmx": for-pack(Xenstore_server)
"server/junk.cmx": for-pack(Xenstore_server)
"server/introduce.cmx": for-pack(Xenstore_server)
"server/heap_debug_interface.cmx": for-pack(Xenstore_server)
<server/*.ml{,i}>: use_xenstore
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_cstruct
<server/*.ml{,i}>: pkg_cstruct.syntax
# Executable xs_test
<core_test/xs_test.{native,byte}>: use_xenstore
<core_test/xs_test.{native,byte}>: pkg_lwt
<core_test/xs_test.{native,byte}>: pkg_oUnit
<core_test/xs_test.{native,byte}>: pkg_lwt.unix
<core_test/xs_test.{native,byte}>: pkg_cstruct
<core_test/xs_test.{native,byte}>: pkg_cstruct.syntax
<core_test/*.ml{,i}>: use_xenstore
<core_test/*.ml{,i}>: pkg_lwt
<core_test/*.ml{,i}>: pkg_oUnit
<core_test/*.ml{,i}>: pkg_lwt.unix
<core_test/*.ml{,i}>: pkg_cstruct
<core_test/*.ml{,i}>: pkg_cstruct.syntax
<core_test/xs_test.{native,byte}>: custom
# Executable xstest
<core_test/xstest.{native,byte}>: pkg_xenbus
<core_test/xstest.{native,byte}>: pkg_stdext
<core_test/xstest.{native,byte}>: pkg_threads
<core_test/*.ml{,i}>: pkg_xenbus
<core_test/*.ml{,i}>: pkg_stdext
<core_test/*.ml{,i}>: pkg_threads
<core_test/xstest.{native,byte}>: custom
# Executable server_test
<server_test/server_test.{native,byte}>: use_xenstore_server
<server_test/server_test.{native,byte}>: use_xenstore
<server_test/server_test.{native,byte}>: pkg_lwt
<server_test/server_test.{native,byte}>: pkg_oUnit
<server_test/server_test.{native,byte}>: pkg_cstruct
<server_test/server_test.{native,byte}>: pkg_cstruct.syntax
<server_test/server_test.{native,byte}>: custom
# Executable server_binary_test
<server_test/binary.{native,byte}>: use_xenstore_server
<server_test/binary.{native,byte}>: use_xenstore_lwt_unix
<server_test/binary.{native,byte}>: use_xenstore
<server_test/binary.{native,byte}>: pkg_lwt
<server_test/binary.{native,byte}>: pkg_oUnit
<server_test/binary.{native,byte}>: pkg_lwt.unix
<server_test/binary.{native,byte}>: pkg_cstruct
<server_test/binary.{native,byte}>: pkg_cstruct.syntax
<server_test/*.ml{,i}>: use_xenstore_server
<server_test/*.ml{,i}>: use_xenstore_lwt_unix
<server_test/*.ml{,i}>: use_xenstore
<server_test/*.ml{,i}>: pkg_lwt
<server_test/*.ml{,i}>: pkg_oUnit
<server_test/*.ml{,i}>: pkg_lwt.unix
<server_test/*.ml{,i}>: pkg_cstruct
<server_test/*.ml{,i}>: pkg_cstruct.syntax
<server_test/binary.{native,byte}>: custom
# OASIS_STOP
true: annot
<*/*.ml>: syntax_camlp4o
<lwt_unix/*.ml>: pkg_lwt.syntax
<server/*.ml>: pkg_lwt.syntax
<server_test/binary.ml>: pkg_lwt.syntax
<core>: include
<client_lwt>: include
<client_unix>: include
<server>: include
